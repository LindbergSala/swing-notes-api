service: swing-notes-api

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: dev
  memorySize: 256
  timeout: 10

  environment:
    NOTES_TABLE: ${self:service}-notes-${sls:stage}
    GSI_BY_ID: GSI1ById

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.NOTES_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.NOTES_TABLE}/index/${self:provider.environment.GSI_BY_ID}

package:
  patterns:
    - src/**
    - package.json
    - package-lock.json

functions:
  getNotes:
    handler: src/handlers/get-notes.handler
    events:
      - http:
          path: api/notes/{username}
          method: get
          cors: true
          private: true   # API-nyckel kr√§vs

  createNote:
    handler: src/handlers/create-note.handler
    events:
      - http:
          path: api/notes/{username}
          method: post
          cors: true

  updateNote:
    handler: src/handlers/update-note.handler
    events:
      - http:
          path: api/notes/{id}
          method: put
          cors: true

  deleteNote:
    handler: src/handlers/delete-note.handler
    events:
      - http:
          path: api/notes/{id}
          method: delete
          cors: true

  createAccount:
    handler: src/createAccount/index.handler
    events:
      - http:
          path: /signup
          method: post
          cors: true

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.NOTES_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.GSI_BY_ID}
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: ALL